#!/bin/bash

# inject .env configs into the shell
if [ -f .env ]; then
	export $(cat .env | grep -v ^# | xargs)
else
	echo ".env file not found!"
	echo ""
	echo "copying .env.example to .env ..."
	cp .env.example .env
	echo "Please edit .env, then run ./ovpn again"
	echo ""
	exit 0;
fi

show_menus() {
	echo "~~~~~~~~~~~~~~~~~~~~~"
	echo " USAGE: ./ovpn COMMAND [arg...] "
	echo "~~~~~~~~~~~~~~~~~~~~~"
	echo "Commands:"
	echo "    init"
	echo "    buildclient [name]"
	echo "    getclient [name]"
	echo "    create"
	echo "    start"
	echo "    stop"
	echo ""
}

read_options(){
	case $1 in
		"init")
			docker pull kylemanna/openvpn
			docker volume create --name $OVPN_DATA
			docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u $OVPN_HOSTNAME
			docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki
			;;
		"buildclient")
			docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full $2 nopass
			;;
		"getclient")
			docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient $2 > $2.ovpn
			;;
		"create") 
			docker run -v $OVPN_DATA:/etc/openvpn -d -p $OVPN_PORT:1194 --name $OVPN_DOCKER_NAME --cap-add=NET_ADMIN kylemanna/openvpn
			echo "Container $OVPN_DOCKER_NAME Created"
			;;
		"start") 
			docker start $OVPN_DOCKER_NAME
			echo "Container $OVPN_DOCKER_NAME Started"
			;;
		"stop")
			docker stop $OVPN_DOCKER_NAME
			echo "Container $OVPN_DOCKER_NAME Stopped"
			;;
		"remove")
			docker rm $OVPN_DOCKER_NAME
			echo "Container $OVPN_DOCKER_NAME Removed"
			;;
		"clean")
			docker volume rm $OVPN_DATA
			;;
		"help")
			show_menus
			;;
		*) show_menus
	esac
}

read_options $@